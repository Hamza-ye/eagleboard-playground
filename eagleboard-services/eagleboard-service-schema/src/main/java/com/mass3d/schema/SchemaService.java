package com.mass3d.schema;

import java.util.List;
import java.util.Set;

public interface SchemaService {

  /**
   * Get schema which has been generated by a SchemaDescriptor.
   *
   * @param klass Class to get for
   * @return Schema for class, or null
   */
  Schema getSchema(Class<?> klass);

  /**
   * Get schema if it has been described by a SchemaDescriptor, if not, it will generate a Schema
   * dynamically from the class. Only the properties part of the Schema will be usable (together
   * with parts which can be auto-generated like isIdentifiableObject).
   *
   * @param klass Class to get for
   * @return Schema for class, or null
   */
  Schema getDynamicSchema(Class<?> klass);

  /**
   * Get schema which has been generated by a SchemaDescriptor by singular name.
   *
   * @param name Name to get Schema for, will be matched against Schema.getSingular().
   * @return Schema for class, or null
   */
  Schema getSchemaBySingularName(String name);

  /**
   * Get schema which has been generated by a SchemaDescriptor by singular name.
   *
   * @param name Name to get Schema for, will be matched against Schema.getSingular().
   * @return Schema for class, or null
   */
  Schema getSchemaByPluralName(String name);

  /**
   * Get all available schemas (which are generated with a schema descriptor).
   *
   * @return List of all available schemas
   */
  List<Schema> getSchemas();

  /**
   * Get all available schemas (which are generated with a schema descriptor).
   *
   * @return List of all available schemas
   */
  List<Schema> getSortedSchemas();

  /**
   * Get all available schemas which have the metadata property set to true.
   *
   * @return List of all available metadata schemas
   */
  List<Schema> getMetadataSchemas();

  /**
   * Collect all authorities from schema descriptors.
   *
   * @return a set of authorities.
   */
  Set<String> collectAuthorities();
}
